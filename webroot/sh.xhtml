<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-us">
<head>
	<!-- this file may be served as application/xhtml+xml -->
	<meta charset="UTF-8"/>
	<title>Aether.sh - Terminal</title>
	<meta name="application-name" content="Aether.sh"/>
	<meta name="theme-color" content="#0080ff"/>
	<link rel="stylesheet" href="css/aether.css"/>
	<!-- <meta http-equiv="Content-Security-Policy" content="script-src 'self'; object-src 'none'"> -->
	<script src="js/vendors/systemjs/system.js"></script>
	<script type="application/javascript">var exports = {};</script>
	<script src="js/vendors/wampy/wampy.js"></script>
	<script src="js/vendors/vue/vue.js"></script>
</head>
<body>
	<script type="text/javascript">
		var aTermConfig=[];
		var App; //:Aether.TermApp
		System.import('./js/Aether-TermApp.js').then(function (AeshModule) 
		{
			console.log(AeshModule.Aether);
			App=new AeshModule.Aether.TermApp(aTermConfig);
			App.onPageLoadBegin();		
			window.addEventListener("load", function (ev) { App.onPageLoadEnd(ev); });
		});
		//window.Aesh should be around now too
	</script>
	<div class="aesh-container aesh-fullscreen">
		<div class="aesh-ctrl-scrbckpane">{{ message }}</div>
		<div class="aesh-ctrl-inputbox"></div>
		<div class="aesh-ctrl-submit"></div>
	</div>
	<script type="text/javascript">
	// <![CDATA[
		function uuidv4() {
				return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =>
					(c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)
				)
			};

	    function eventHandler (dataObj) {
        	event = dataObj.argsDict;
	        if (event.channel == "sys")
    	    {
        	    if (event.event == "output")
            	{
	                console.log(event.data.Output);
    	        }
        	}

    	}

	    function announce(ws = null) {
    	    if (ws == null)
        	{
            	ws = new Wampy('ws://10.100.0.6:9090', { realm: 'Test' });
	        }
    	    setTimeout(function () {
        	    console.log(ws.getSessionId());
            	ws.publish("sh.aether.announce", {"session":ws.getSessionId()});
	            ws.subscribe("sh.aether.term." + ws.getSessionId(), eventHandler);
    	    }, 1000);
        	return ws;
	    }

	    function execute(conn, command)
    	{
        	conn.publish('sh.aether.acn.' + conn.getSessionId(), 
            	{
                	"channel":"terminal.command", 
	                "event":"execute", "session":conn.getSessionId(), 
    	            "data":{
        	            "SessionId": conn.getSessionId(), 
            	        "ExecutionId": uuidv4(), 
                	    "Command": command
	                }
    	        }
        	);
	    }
	//]]>
	</script>
</body>
</html>